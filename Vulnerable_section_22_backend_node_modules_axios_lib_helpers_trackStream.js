 

 export const streamChunk = function* (chunk, chunkSize) {
   let len = chunk.byteLength;
 
   const iterator = readBytes(stream, chunkSize, encode);
 
   let bytes = 0;
 
   return new ReadableStream({
    type: 'bytes',

     async pull(controller) {
      const {done, value} = await iterator.next();
 
      if (done) {
        controller.close();
        onFinish();
        return;
      }
 
      let len = value.byteLength;
      onProgress && onProgress(bytes += len);
      controller.enqueue(new Uint8Array(value));
     },
     cancel(reason) {
      onFinish(reason);
       return iterator.return();
     }
   }, {